server:
  port: 8088

spring:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  # Local Database
  datasource:
    url: ${database-url}
    username: ${database-username}
    password: ${database-password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Docker Datasource
#  datasource:
#    url: ${database-url}
#    username: ${database-username}
#    password: ${database-password}
#    driver-class-name: com.mysql.cj.jdbc.Driver


  kafka:
    producer:
      bootstrap-servers: ${kafka-producer-bootstrap-servers}
      group_id: ${kafka-producer-group-id}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: '*'

    consumer:
      bootstrap-servers: ${kafka-consumer-bootstrap-server}
      group_id: ${kafka-consumer-group-id}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'

razorpay:
  key:
    id: ${razorpay-key-id}
  secret:
    key: ${razorpay-secret-key}
